
# Source: opcapp/charts/broker/templates/serviceAccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opcua-publisher
  namespace: opcapp
---
# Source: opcapp/charts/grafana/templates/serviceAccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opcua-telemetry-dashboard
  namespace: opcapp
---
# Source: opcapp/charts/opcua/templates/serviceAccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opcua-server
  namespace: opcapp
---
# Source: opcapp/charts/tsdb/templates/serviceAccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opcua-historian
  namespace: opcapp
---
# Source: opcapp/charts/grafana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: opcua-telemetry-dashboard
  namespace: opcapp
spec:
  type: LoadBalancer
  ports:
    - name: dashboard
      port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app: dashboard
---
# Source: opcapp/charts/opcua/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: opcua-server
  namespace: opcapp
spec:
  type: ClusterIP
  ports:
    - name: app
      port: 50000
      targetPort: 50000
      protocol: TCP
  selector:
    app: server
---
# Source: opcapp/charts/tsdb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: opcua-historian
  namespace: opcapp
spec:
  type: ClusterIP
  ports:
    - name: app
      port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app: tsdb
---
# Source: opcapp/charts/broker/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opcua-publisher
  namespace: opcapp
  labels:
    app: broker
spec:
  selector:
    matchLabels:
      app: broker
  template:
    metadata:
      labels:
        app: broker
    spec:
      serviceAccountName: opcua-publisher
      containers:
        - name: opcua-publisher
          image: "privsaasv1intacr.azurecr.io/opcuabroker:v1.int"
          imagePullPolicy: IfNotPresent
          env:
          - name: ASPNETCORE_ENVIRONMENT
            value: "Development"
          - name: TIMESCALE_HOST
            value: "opcua-historian.opcapp.svc:5432"
          - name: TIMESCALE_USER
            value: "postgres"
          - name: TIMESCALE_PWD_ENV
            value: "TIMESCALE_PWD"
          - name: TIMESCALE_PWD
            value: "Tsdb@123!"
          - name: OPCUA_SERVER_URL
            value: "opc.tcp://opcua-server.opcapp.svc:50000"
          - name: NAMESPACE_INDEX
            value: "3"
          - name: AUTO_ACCEPT_UNTRUSTED_SERVER_CERT
            value: "True"
          - name: MONITORED_NODE_IDENTIFIERS
            value: "SpikeData;StepUp;DipData;FastNumberOfUpdates;SlowNumberOfUpdates"
          - name: ENABLE_TIMESERIES_LOGGING
            value: "True"
          volumeMounts:
            - name: workload-token
              mountPath: /var/run/secrets/tokens
            - name: zta-svids
              mountPath: /var/run/secrets/svids
          resources: {}
      imagePullSecrets:
        - name: hestia-acr-secret
      volumes:
        - name: zta-svids
          emptyDir: {}
        - name: workload-token
          projected:
            sources:
            - serviceAccountToken:
                path: workload
                expirationSeconds: 7200
                audience: zta-agent
---
# Source: opcapp/charts/grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opcua-telemetry-dashboard
  namespace: opcapp
  labels:
    app: dashboard
spec:
  selector:
    matchLabels:
      app: dashboard
  template:
    metadata:
      labels:
        app: dashboard
    spec:
      serviceAccountName: opcua-telemetry-dashboard
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: opcua-telemetry-dashboard
          image: "grafana/grafana:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: dashboard
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1                            
          volumeMounts:
            - name: workload-token
              mountPath: /var/run/secrets/tokens
            - name: zta-svids
              mountPath: /var/run/secrets/svids
          resources: {}
      imagePullSecrets:
        - name: hestia-acr-secret
      volumes:
        - name: zta-svids
          emptyDir: {}
        - name: workload-token
          projected:
            sources:
            - serviceAccountToken:
                path: workload
                expirationSeconds: 7200
                audience: zta-agent
---
# Source: opcapp/charts/opcua/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opcua-server
  namespace: opcapp
  labels:
    app: opcua
spec:
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      serviceAccountName: opcua-server
      containers:
        - name: opcua-server
          image: "privsaasv1intacr.azurecr.io/opcplcserver:v1.int"
          imagePullPolicy: IfNotPresent
          command: ["/bin/bash", "-c", "./opcplc --pn=50000 --at X509Store --autoaccept --sph --sn=5 --sr=10 --st=uint --fn=5 --fr=1 --ft=uint --gn=5"]
          ports:
            - name: opcplc
              containerPort: 50000
              protocol: TCP
          volumeMounts:
            - name: workload-token
              mountPath: /var/run/secrets/tokens
            - name: zta-svids
              mountPath: /var/run/secrets/svids
          resources: {}
      imagePullSecrets:
        - name: hestia-acr-secret
      volumes:
        - name: zta-svids
          emptyDir: {}
        - name: workload-token
          projected:
            sources:
            - serviceAccountToken:
                path: workload
                expirationSeconds: 7200
                audience: zta-agent
---
# Source: opcapp/charts/tsdb/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opcua-historian
  namespace: opcapp
  labels:
    app: tsdb
spec:
  selector:
    matchLabels:
      app: tsdb
  template:
    metadata:
      labels:
        app: tsdb
    spec:
      serviceAccountName: opcua-historian
      containers:
        - name: opcua-historian
          image: "privsaasv1intacr.azurecr.io/tsdb:v1.int"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              name: tsdb
              protocol: TCP
          env:
          - name: POSTGRES_PASSWORD
            value: "TSDB@123!"
          volumeMounts:
            - name: workload-token
              mountPath: /var/run/secrets/tokens
            - name: zta-svids
              mountPath: /var/run/secrets/svids
          resources: {}
      imagePullSecrets:
        - name: hestia-acr-secret
      volumes:
        - name: zta-svids
          emptyDir: {}
        - name: workload-token
          projected:
            sources:
            - serviceAccountToken:
                path: workload
                expirationSeconds: 7200
                audience: zta-agent

