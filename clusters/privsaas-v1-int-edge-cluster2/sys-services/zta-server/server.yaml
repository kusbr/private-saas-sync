# Source: zta-server/charts/server/templates/serviceAccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hestia-zta-server
  namespace: hestia-system
---
# Source: zta-server/charts/server/templates/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hestia-zta-server
  namespace: hestia-system
data:
  ztaserver-cfg.toml: |
    trust_domain = "demo.privsaas.core"
    is_spiffe_root = true
    token_audience = "zta-server"
    adminapi_bind_address = "0.0.0.0"
    adminapi_bind_port = 8080
    svidapi_bind_address = "0.0.0.0"
    svidapi_bind_port = 8081
    svid_ttl_hr = 2400

    [signer_cert_cfg]
    signer_cert_ttl_hr = 2400
    country = "US"
    org = "OT"
    common_name = "demo.privsaas.core"
    alg = "RS256"
    rsa_key_size = "KeySize4096"

    [system_config]
    instance_name = "hestia"
    zta_services = [
        "zta-agent",
        "zta-adm-ctrl",
        "zta-server"
    ]
    management_services = [
        "hestia-cp",
        "cluster-registry",
        "fleet-registry",
        "workload-svc",
    ]
    control_services = [
        "bootstrapper-svc",
        "cluster-capacity-cloud",
        "deployment-svc",
        "deploymentplan-svc",
        "workload-scheduling-svc",
    ]
    edge_services = [
        "cluster-capacity-edge",
    ]
---
# Source: zta-server/charts/server/templates/clusterRole.yaml
# ClusterRole to allow .Values.global.ztaServerName node attestor to query Token Review API
# and to be able to push trust-bundles to a configmap
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "hestia-zta-server-clusterrole"
  namespace: hestia-system
rules:
- apiGroups: [""]
  resources: ["pods", "nodes","nodes/proxy"]
  verbs: ["get", "list"]
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["patch", "get", "list"]
---
# Source: zta-server/charts/server/templates/clusterRole.yaml
# Binds above cluster role to spire-server service account
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hestia-zta-server-clusterrole-binding
  namespace: hestia-system
subjects:
- kind: ServiceAccount
  name: hestia-zta-server
  namespace: hestia-system
roleRef:
  kind: ClusterRole
  name: hestia-zta-server-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: zta-server/charts/server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hestia-zta-server
  namespace: hestia-system
spec:
  type: ClusterIP
  ports:
    - name: admin
      port: 8080
      targetPort: 8080
      protocol: TCP
    - name: svid
      port: 8081
      targetPort: 8081
      protocol: TCP      
  selector:
    app: hestia-zta-server
---
# Source: zta-server/charts/server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hestia-zta-server
  namespace: hestia-system
  labels:
    app: hestia-zta-server
spec:
  selector:
    matchLabels:
      app: hestia-zta-server
  template:
    metadata:
      labels:
        app: hestia-zta-server
    spec:
      serviceAccountName: hestia-zta-server
      containers:
        - name: hestia-zta-server
          image: "privsaasv1intacr.azurecr.io/zta-server:beta1"
          ports:
            - containerPort: 8080
            - containerPort: 8081
          imagePullPolicy: IfNotPresent
          env:
          - name: IMAGE_REPO
            value: "privsaasv1intacr.azurecr.io/"
          - name: IMAGE_TAG
            value: "beta1"
          volumeMounts:
            - name: config
              mountPath: /usr/local/bin/privatesaas
            - name: zta-token
              mountPath: /var/run/secrets/tokens
            - name: zta-svids
              mountPath: /var/run/secrets/svids
          resources: {}
      imagePullSecrets:
      - name: hestia-acr-secret
      volumes:
        - name: config
          configMap:
            name: hestia-zta-server
        - name: zta-svids
          emptyDir: {}
        - name: zta-token
          projected:
            sources:
            - serviceAccountToken:
                path: hestia-zta-server
                expirationSeconds: 7200

