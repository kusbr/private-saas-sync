apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-capacity-edge
  namespace: {{ .Values.global.serviceInstanceName }}-system
spec:
  selector:
    matchLabels:
      app: cluster-capacity-edge
  template:
    metadata:
      labels:
        app: cluster-capacity-edge
    spec:
      serviceAccountName: {{ tpl .Values.global.serviceInstanceName . }}-{{ .Values.global.sysServices.capacityServiceEdge}}
      containers:
      - name: cluster-capacity-edge
        image: {{ tpl .Values.global.sources.containerRegistry . }}/{{ tpl .Values.global.sysServices.capacityServiceEdge . }}:{{ tpl .Values.global.sources.images.tag .}}
        ports:
        - containerPort: 3000
        imagePullPolicy: Always
        volumeMounts:
        - name: workload-token
          mountPath: /var/run/secrets/tokens
        - name: zta-svids
          mountPath: /var/run/secrets/svids
        - name: config
          mountPath: /usr/local/hestia
        resources: {}
      imagePullSecrets:
        - name: hestia-acr-secret
      volumes:
        - name: config
          configMap:
            name: cluster-capacity-edge
        - name: zta-svids
          emptyDir: {}
        - name: workload-token
          projected:
            sources:
            - serviceAccountToken:
                path: workload
                expirationSeconds: {{ .Values.global.serviceAccountTokenExpirationSeconds }}
                audience: {{ .Values.global.sysServices.ztaAgent }}
