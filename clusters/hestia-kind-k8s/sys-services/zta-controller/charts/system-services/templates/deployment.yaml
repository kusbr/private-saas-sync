apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.global.sysServices.ztaController}}
  namespace: {{ .Values.global.serviceInstanceName }}-system
  labels:
    app: {{ .Values.global.serviceInstanceName }}-{{ .Values.global.sysServices.ztaController}}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.global.serviceInstanceName }}-{{ .Values.global.sysServices.ztaController}}
  template:
    metadata:
      labels:
        app: {{ .Values.global.serviceInstanceName }}-{{ .Values.global.sysServices.ztaController}}
    spec:
      serviceAccountName: {{ .Values.global.serviceInstanceName }}-{{ .Values.global.sysServices.ztaController}}
      containers:
        # - name: test
        #   image: nginx
        #   command: ["/bin/sh"]
        #   args: ["-c", "while true; do echo hello; sleep 10;done"]
        #   imagePullPolicy: Always
        - name: {{ .Values.global.sysServices.ztaController}}
          image: "{{ tpl .Values.global.sources.containerRegistry . }}/{{ tpl .Values.global.sysServices.ztaController . }}:{{ tpl .Values.global.sources.images.tag .}}"
          ports:
            - containerPort: {{ .Values.webHookPort }}
              name: zta-ctrl
              protocol: TCP
          imagePullPolicy: Always
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: serviceInstanceName
            value: {{ .Values.global.serviceInstanceName }}
          - name: name
            value: {{ .Values.global.sysServices.ztaController}} # name of the service being bootstraped
          volumeMounts:
            - name: config
              mountPath: /usr/local/bin/privatesaas
            - name: privsaas-zta-token
              mountPath: /var/run/secrets/tokens
            - name: zta-svids
              mountPath: /var/run/secrets/svids
          resources: {}
      imagePullSecrets:
        - name: hestia-acr-secret
      volumes:
        - name: config
          configMap:
            name: {{ .Values.global.serviceInstanceName }}-{{ .Values.global.sysServices.ztaController}}
        - name: zta-svids
          emptyDir: {}            
        - name: privsaas-zta-token
          projected:
            sources:
            - serviceAccountToken:
                path: {{ .Values.global.serviceInstanceName }}-{{ .Values.global.sysServices.ztaController}}
                expirationSeconds: {{ .Values.global.serviceAccountTokenExpirationSeconds }}
                audience: {{ .Values.global.sysServices.ztaAgent }}
